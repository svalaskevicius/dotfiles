# Edit this configuration file to define what should be installed on
# your system.  Help is available in the configuration.nix(5) man page
# and in the NixOS manual (accessible by running ‘nixos-help’).

{ config, pkgs, ... }:

let
qca6174_firmware = pkgs.callPackage ./qca6174_firmware.nix { };
in
{

  boot.initrd.luks.devices = [
  {
    name = "root";
    device = "/dev/disk/by-uuid/559df880-7d37-43fc-82f8-09d1c21e06d6";
    preLVM = true;
    allowDiscards = true;
  }
  ];

  boot.blacklistedKernelModules = [ 
    "nouveau" "rivafb" "nvidiafb" "rivatv" "nv" # graphics
    "alx"                                       # ethernet controller - uses 10W power (!!) and I use wireless anyways
  ];
  boot.kernelPackages = pkgs.linuxPackages_latest;
  boot.extraModulePackages = with config.boot.kernelPackages; [ acpi_call ];
  boot.kernelModules = [ "acpi_call" ]; # "dell-smm-hwmon" ];
  boot.kernelParams = [
      "acpi_osi=!"
      "acpi_osi=Windows 2013"
      "acpi_rev_override=1"
      "acpi_backlight=vendor"
      # "noapic"
      "atkbd.reset=1"
      "i8042.nomux=1"
#      "i8042.kbdreset=1"
      "i8042.reset=1"
      "workqueue.power_efficient=1"
      "snd-hda-intel.enable=1,0"
#    "acpi_osi=Linux"
#    "acpi_rev_override=1"
#    "i915.disable_power_well=0"
#    "i915.fastboot=1"
#    "dell-smm-hwmon.ignore_dmi=1"
  ];


  hardware.firmware = with pkgs; [
# firmwareLinuxNonfree
    qca6174_firmware ];

# hardware.nvidiaOptimus.disable = true;


  networking.hostName = "lien"; # Define your hostname.

# Select internationalisation properties.
    i18n = {
      consoleFont = "latarcyrheb-sun32";
      consoleKeyMap = "uk";
      defaultLocale = "en_GB.UTF-8";
    };

  fonts.fontconfig.dpi = 192;

  powerManagement.powertop.enable=true;

  services = {
    tlp.enable = true;

    tlp.extraConfig = ''
      DISK_DEVICES="nvme0n1 nvme1n1"
      CPU_SCALING_GOVERNOR_ON_AC=powersave
      CPU_SCALING_GOVERNOR_ON_BAT=powersave
      ENERGY_PERF_POLICY_ON_AC=default
      ENERGY_PERF_POLICY_ON_BAT=power
      CPU_HWP_ON_AC=balance_performance
      CPU_HWP_ON_BAT=power
      RUNTIME_PM_BLACKLIST="01:00.0"
      USB_BLACKLIST="413c:2113"
      DEVICES_TO_DISABLE_ON_STARTUP="bluetooth"
      WOL_DISABLE=Y
      '';


    xserver = {
      dpi = 192;
      useGlamor = true;
      videoDrivers = [ "modesetting" ];

      serverFlagsSection = ''
        Option "AutoAddGPU" "false"
      '';

      deviceSection = ''
        BusID "PCI:00:02.0"
        Option "ProbeAllGpus" "false"
      '';


# Enable the Desktop Environment.
      displayManager.lightdm.enable = true;

      windowManager.xmonad.enable = true;
      windowManager.xmonad.enableContribAndExtras = false;
      desktopManager.xterm.enable = false;
      desktopManager.gnome3.enable = false;
      desktopManager.default = "none";
      windowManager.default = "xmonad";
    };
    redshift.enable = true;

# Enable network printer
    printing.enable = true;
    avahi.enable = true;
    avahi.nssmdns = true;
  };

  location = {
    latitude = 51.5074;
    longitude = 0.1278;
    provider = "manual";
  };

  programs.ssh.startAgent = true;
  programs.ssh.agentTimeout = "8h";

# This value determines the NixOS release with which your system is to be
# compatible, in order to avoid breaking some software such as database
# servers. You should change this only after NixOS release notes say you
# should.
  system.stateVersion = "19.03"; # Did you read the comment?

  systemd.services.nopowerleak = {
    description = "Disable devices I don't use on Linux";
    wantedBy = [ "graphical-session-pre.target" "multiuser.target" "display-manager.service" ];

    script = ''
      set -e
      echo auto > /sys/bus/pci/devices/0000:01:00.0/power/control 
      echo auto > /sys/bus/pci/devices/0000:01:00.1/power/control 

      echo 1 > /sys/bus/pci/devices/0000:01:00.0/remove
      echo 1 > /sys/bus/pci/devices/0000:01:00.1/remove
      echo '\_SB.PCI0.PEG0.PEGP._OFF' > /proc/acpi/call
      echo "Nvidia disabled"

      ${pkgs.undervolt}/bin/undervolt --core -150 --cache -150 --uncore -100 --gpu -50 --analogio -30
      echo "CPU undervolted"
      '';
  };
  systemd.services.nopowerleak-resumed = {
    description = "Disable devices I don't use on Linux - after system resume";
    wantedBy = [ "suspend.target" ];
    after = [ "suspend.target" ];

    script = ''
      set -e
      sleep 90

     if test -d /sys/bus/pci/devices/0000:01:00.0 ; then
       echo auto > /sys/bus/pci/devices/0000:01:00.0/power/control
       echo 1 > /sys/bus/pci/devices/0000:01:00.0/remove
     fi
     if test -d /sys/bus/pci/devices/0000:01:00.1 ; then
       echo auto > /sys/bus/pci/devices/0000:01:00.1/power/control
       echo 1 > /sys/bus/pci/devices/0000:01:00.1/remove
     fi
     echo '\_SB.PCI0.PEG0.PEGP._OFF' > /proc/acpi/call
     sleep 10
     echo '\_SB.PCI0.PEG0.PEGP._OFF' > /proc/acpi/call
     sleep 1
     echo "Nvidia disabled"

      ${pkgs.undervolt}/bin/undervolt --core -150 --cache -150 --uncore -100 --gpu -50 --analogio -30
      echo "CPU undervolted"
      '';
  };

  # nvidia + undervolt
  environment.systemPackages = [
      pkgs.undervolt
      (pkgs.linuxPackages.nvidia_x11.override { libsOnly = true; kernel = null; })
      (pkgs.pkgsi686Linux.linuxPackages.nvidia_x11.override { libsOnly = true; kernel = null; })
  ];
  # install nvidia drivers in addition to intel one
  hardware.opengl.extraPackages = [ pkgs.linuxPackages.nvidia_x11.out ];
  hardware.opengl.extraPackages32 = [ pkgs.pkgsi686Linux.linuxPackages.nvidia_x11.out ];
}
